//
//  StoriesPresenter.swift
//  lampa
//
//  Created Oleg Pogosian on 23.05.2020.
//  Copyright © 2020 Oleg Pogosian. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit
import RxSwift

class StoriesPresenter: CorePresenter, StoriesPresenterProtocol {

    weak private var view: StoriesViewProtocol?
    var interactor: StoriesInteractorProtocol?
    private let router: StoriesWireframeProtocol

    init(interface: StoriesViewProtocol, interactor: StoriesInteractorProtocol?, router: StoriesWireframeProtocol) {
        self.view = interface
        self.interactor = interactor
        self.router = router
    }

    func getPopularVideos(page: Int) {
        self.view?.showProgress()
        subscribe(disposable: (interactor?.getPopularVideos(page: page)
            .subscribe(
                onNext: { response in
                    self.view?.hideProgress()
                    self.view?.getPopularSuccess(data: response)
            },
                onError: { error in
                    self.view?.hideProgress()
                    print(error)
            }))!)
    }
    
    func getTopRatedVideos(page: Int) {
        self.view?.showProgress()
        subscribe(disposable: (interactor?.getTopRatedVideos(page: page)
            .subscribe(
                onNext: { response in
                    self.view?.hideProgress()
                    self.view?.getTopRatedSuccess(data: response)
            },
                onError: { error in
                    self.view?.hideProgress()
                    print(error)
            }))!)
    }
}
