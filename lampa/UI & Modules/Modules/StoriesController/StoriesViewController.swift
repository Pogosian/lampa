//
//  StoriesViewController.swift
//  lampa
//
//  Created Oleg Pogosian on 23.05.2020.
//  Copyright © 2020 Oleg Pogosian. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit
import Kingfisher

class StoriesViewController: UIViewController, StoriesViewProtocol {
    
	var presenter: StoriesPresenterProtocol?
    
    // MARK: - IBOutlets
    
    @IBOutlet weak var videosTableView: UITableView! {
        didSet {
            self.videosTableView.delegate = self
            self.videosTableView.dataSource = self
            self.videosTableView.register(UINib(nibName: "PopularTableViewCell", bundle: nil), forCellReuseIdentifier: "PopularTableViewCell")
            self.videosTableView.register(UINib(nibName: "FirstTableViewCell", bundle: nil), forCellReuseIdentifier: "FirstTableViewCell")
        }
    }
    
    // MARK: - Public Properties
    
    var popularVideosArray = [VideoModel]()
    var topRatedVideosArray = [VideoModel]()
    
    // MARK: - Private Properties

    private var page = 1
    private let imgPath = "https://image.tmdb.org/t/p/w500"

    // MARK: - Lifecycle

	override func viewDidLoad() {
        super.viewDidLoad()
        
        StoriesRouter.createModule(view: self)
        
        self.title = "STORIES"
        
        presenter?.getPopularVideos(page: page)
        presenter?.getTopRatedVideos(page: page)

    }
    
    // MARK: - Public Methods
    
    func getPopularSuccess(data: [VideoModel]) {
        popularVideosArray += data
        videosTableView.reloadData()
    }
    
    func getTopRatedSuccess(data: [VideoModel]) {
        topRatedVideosArray = data
    }
    
    func showProgress() {
        startActivityIndicator()
    }
    
    func hideProgress() {
        stopActivityIndicator()
    }

    // MARK: - Private Methods
    
    @objc func openPopularUrl(sender: UIButton) {
        let application = UIApplication.shared
        let url = URL(string: imgPath + popularVideosArray[sender.tag].poster_path) ?? URL(string: "https://lampalampa.net")!
        application.open(url)
    }
    
    @objc func openTopUrl(sender: UIButton) {
        let application = UIApplication.shared
        let url = URL(string: imgPath + topRatedVideosArray[sender.tag].poster_path) ?? URL(string: "https://lampalampa.net")!
        application.open(url)
    }

    // MARK: - IBActions
    
}

//tableview delegate

extension StoriesViewController: UITableViewDelegate {
    func tableView(_ tableView: UITableView, heightForHeaderInSection section: Int) -> CGFloat {
        if section == 0 {
            return 2
        } else {
            return .leastNonzeroMagnitude
        }
    }
    
    func tableView(_ tableView: UITableView, heightForFooterInSection section: Int) -> CGFloat {
        return 15
    }
    
    func tableView(_ tableView: UITableView, viewForFooterInSection section: Int) -> UIView? {
        let footerView = UIView()
        footerView.backgroundColor = .separator
        return footerView
    }
}

//tableview datasource
extension StoriesViewController: UITableViewDataSource {
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return 1
    }
    
    func numberOfSections(in tableView: UITableView) -> Int {
        return popularVideosArray.count
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {

        if indexPath.section == 0 {
            let cell = tableView.dequeueReusableCell(withIdentifier: "FirstTableViewCell", for: indexPath) as! FirstTableViewCell
            cell.pageControl.numberOfPages = popularVideosArray.count
            cell.sliderCollectionView.dataSource = self
            cell.sliderCollectionView.delegate = self
            cell.sliderCollectionView.reloadData()
            return cell
        } else {
            let cell = tableView.dequeueReusableCell(withIdentifier: "PopularTableViewCell", for: indexPath) as! PopularTableViewCell
            cell.dateLabel.text = "- " + popularVideosArray[indexPath.section - 1].release_date
            cell.descriptionLabel.text = popularVideosArray[indexPath.section - 1].original_title
            cell.urlButton.setTitle(imgPath + popularVideosArray[indexPath.section - 1].backdrop_path, for: .normal)
            cell.urlButton.tag = indexPath.section - 1
            cell.cellIMG.kf.indicatorType = .activity
            cell.cellIMG.kf.setImage(with: URL(string: imgPath + popularVideosArray[indexPath.section - 1].backdrop_path))
            cell.urlButton.addTarget(self, action: #selector(openPopularUrl), for: .touchUpInside)
            return cell
        }
    }
}

//pagination
extension StoriesViewController: UIScrollViewDelegate {
    func scrollViewDidEndDragging(_ scrollView: UIScrollView, willDecelerate decelerate: Bool) {
        if (( videosTableView.contentOffset.y + videosTableView.frame.size.height) >= videosTableView.contentSize.height) {
            if popularVideosArray.count % 20 == 0 {
                page += 1
                presenter?.getPopularVideos(page: page)
            }
        }
    }
}

//collectionview datasource
extension StoriesViewController: UICollectionViewDataSource {
    func collectionView(_ collectionView: UICollectionView, numberOfItemsInSection section: Int) -> Int {
        return topRatedVideosArray.count
    }
    
    func collectionView(_ collectionView: UICollectionView, cellForItemAt indexPath: IndexPath) -> UICollectionViewCell {
        let cell = collectionView.dequeueReusableCell(withReuseIdentifier: "TopRatedCollectionViewCell", for: indexPath) as! TopRatedCollectionViewCell
        cell.backgroundIMG.kf.setImage(with: URL(string: imgPath + topRatedVideosArray[indexPath.item].backdrop_path))
        cell.descriptionLabel.text = topRatedVideosArray[indexPath.item].original_title
        cell.timeLabel.text = "- " + topRatedVideosArray[indexPath.item].release_date
        cell.urlButton.setTitle(imgPath + topRatedVideosArray[indexPath.item].backdrop_path, for: .normal)
        cell.urlButton.addTarget(self, action: #selector(openTopUrl), for: .touchUpInside)
        cell.urlButton.tag = indexPath.item
        
        return cell
    }
}

//collectionview delegate
extension StoriesViewController: UICollectionViewDelegate, UICollectionViewDelegateFlowLayout {
    func collectionView(_ collectionView: UICollectionView, layout collectionViewLayout: UICollectionViewLayout, sizeForItemAt indexPath: IndexPath) -> CGSize {
        return CGSize(width: collectionView.frame.size.width, height: collectionView.frame.size.height)
    }

    func collectionView(_ collectionView: UICollectionView, willDisplay cell: UICollectionViewCell, forItemAt indexPath: IndexPath) {
        let cell = videosTableView.cellForRow(at: IndexPath(row: 0, section: 0)) as? FirstTableViewCell
        cell?.pageControl.currentPage = indexPath.item
    }
}
