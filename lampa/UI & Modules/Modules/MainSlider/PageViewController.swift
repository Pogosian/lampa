//
//  PageViewController.swift
//  lampa
//
//  Created Oleg Pogosian on 23.05.2020.
//  Copyright © 2020 Oleg Pogosian. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit

class PageViewController: UIPageViewController {
    
    let first = UIStoryboard(name: "Main", bundle: nil).instantiateViewController(withIdentifier: "StoriesViewController")
    let second = UIStoryboard(name: "Main", bundle: nil).instantiateViewController(withIdentifier: "VideoViewController")
    let third = UIStoryboard(name: "Main", bundle: nil).instantiateViewController(withIdentifier: "FavouritesViewController")
    
    private var controllersArray = [UIViewController]()
    private var index = 0
    
    override func viewDidLoad() {
        super.viewDidLoad()
        
        dataSource = self
        delegate = self
        controllersArray = [first, second, third]
        
        setViewControllers([controllersArray.first!], direction: .forward, animated: false, completion: nil)
        self.navigationController?.navigationBar.topItem?.title = controllersArray.first?.title
        
    }
}

extension PageViewController: UIPageViewControllerDataSource {
    
    func pageViewController(_ pageViewController: UIPageViewController,
                            viewControllerBefore viewController: UIViewController) -> UIViewController? {
        guard let viewControllerIndex = controllersArray.firstIndex(of:viewController) else {
            
            return nil
        }
        
        let previousIndex = viewControllerIndex - 1
        
        guard previousIndex >= 0 else {
            return nil
        }
        
        guard controllersArray.count > previousIndex else {
            return nil
        }

        return controllersArray[previousIndex]
    }
    
    func pageViewController(_ pageViewController: UIPageViewController,
                            viewControllerAfter viewController: UIViewController) -> UIViewController? {
        guard let viewControllerIndex = controllersArray.firstIndex(of:viewController) else {
            return nil
        }
        
        let nextIndex = viewControllerIndex + 1
        let orderedViewControllersCount = controllersArray.count
        
        guard orderedViewControllersCount != nextIndex else {
            return nil
        }
        
        guard orderedViewControllersCount > nextIndex else {
            return nil
        }

        return controllersArray[nextIndex]
    }
    
    func presentationCount(for pageViewController: UIPageViewController) -> Int {
        return controllersArray.count
    }
    
    func presentationIndex(for pageViewController: UIPageViewController) -> Int {
        return 0
    }
}

extension PageViewController: UIPageViewControllerDelegate {
    
    func pageViewController(_ pageViewController: UIPageViewController, didFinishAnimating finished: Bool, previousViewControllers: [UIViewController], transitionCompleted completed: Bool) {
        
        guard let current = self.viewControllers?.first else {
            return
        }

        guard let index = self.controllersArray.firstIndex(of: current) else {
            return
        }

        self.navigationController?.navigationBar.topItem?.title = controllersArray[index].title
    }
    
}
